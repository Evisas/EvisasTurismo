<!DOCTYPE html>

<%-- Includes TAGLIBs --%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" 	 prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" 	 prefix="fmt" %>
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form" %>
<head>
<%--
		<meta charset="utf-8">
		<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"> 
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
--%>
	
	<title>Evisas</title>

	<!-- Includes Jquery -->
	<script type="text/javascript" src="/js/jquery/jquery-3.3.1.min.js"></script>
	
	<!-- Includes Bootstrap (obs.: bootstrap precisa do jquery e popper.js) -->
	<script type="text/javascript" src="/js/popper/popper.min.js"></script>
	<script type="text/javascript" src="/bootstrap/4.3.1/js/bootstrap.min.js"></script>
	<link rel="stylesheet" href="/bootstrap/4.3.1/css/bootstrap.min.css">

	<!-- Includes Jquery Mask -->
	<script type="text/javascript" src="/js/mask/jquery.mask.min.js"></script>

	<!-- Includes Jquery Validation -->
	<script type="text/javascript" src="/js/validation/jquery.validate.min.js"></script>
	<script type="text/javascript" src="/js/validation/additional-methods.min.js"></script>
	
	<link rel="stylesheet" href="/css/style.css">
	<script type="text/javascript" src="/js/utilFunctions.js"></script>

	<script type="text/javascript">

	// Muda as configurações padrão do Jquery validator de acordo com nossa necessidade
	$.validator.setDefaults({
		errorElement: "div",
		errorClass: "invalid-feedback",
		highlight: function(element, errorClass, validClass) {		// validação dinâmica apontou erro (agora além da mensagem, muda a classe do input)
			if ( element.type === "radio" ) {
				this.findByName( element.name ).addClass( "is-invalid" ).removeClass( "is-valid" );
			} else {
				$( element ).addClass( "is-invalid" ).removeClass( "is-valid" );
			}		
		},
		unhighlight: function(element, errorClass, validClass) {	// validação dinâmica apontou que está ok (agora além da mensagem, muda a classe do input)
			if ( element.type === "radio" ) {
				this.findByName( element.name ).removeClass( "is-invalid" ).addClass( "is-valid" );
			} else {
				$( element ).removeClass( "is-invalid" ).addClass( "is-valid" );
			}		},
		errorPlacement: function(error, element) {	
			if (element[0].type === "radio") { 
				// Se o tipo do campo for 'radio', insere msg de erro depois de todos os input-radio do grupo
				error.insertAfter(element.parents(".form-group").children().last());
				return;
			}
			// Se o input tiver texto explicativo, inserir msg de erro depois do texto explicativo
			var textoExplicativoElement = $(".text-muted[target='"+element.attr("id")+"']");
			if (textoExplicativoElement.length) {	// existe?
				error.insertAfter(textoExplicativoElement);
			} else {
				error.insertAfter(element);
			}
		}
	});
	
	// Muda as mensagens padrão do Jquery validator
	jQuery.extend(jQuery.validator.messages, {
		required: "<spring:message code='javax.validation.constraints.NotBlank.message' />",
//		remote: "Please fix this field.",
		email: "<spring:message code='javax.validation.constraints.Email.message' />",
//		url: "Please enter a valid URL.",
//		date: "Please enter a valid date.",
//		dateISO: "Please enter a valid date (ISO).",
//		number: "Please enter a valid number.",
//		digits: "Please enter only digits.",
//		creditcard: "Please enter a valid credit card number.",
		equalTo: jQuery.validator.format("<spring:message code='msg.erro.campo.deve.ser.igual' />"),
		accept:"<spring:message code='msg.erro.validacao.fileExtension' />",
		maxlength: jQuery.validator.format("<spring:message code='msg.erro.tamanho.maximo.campo' />"),
		minlength: jQuery.validator.format("<spring:message code='msg.erro.tamanho.minimo.campo' />"),
//		rangelength: jQuery.validator.format("Please enter a value between {0} and {1} characters long."),
//		range: jQuery.validator.format("Please enter a value between {0} and {1}."),
		max: jQuery.validator.format("<spring:message code='msg.erro.valor.deve.ser.menor.igual' />"),
		min: jQuery.validator.format("<spring:message code='msg.erro.valor.deve.ser.maior.igual' />"),

		pattern: "<spring:message code='javax.validation.constraints.Pattern.message' />",
		maxsize: "<spring:message code='msg.erro.arquivo.muito.grande' />"
	});
	
	// Aplica validação (jquery validation) nos formulários da página
	$(document).ready(function(){
//		$('.data').mask('00/00/0000'); // campo data já é tratado pelo bootstrap e html5
		$('.cpf').mask('000.000.000-00');
		$('.matricula').mask('0000');
		aplicarMascaraTelefone8ou9digitos('.telefone');
		$("form").validate();
		$("input[type='date']").rules( "add", {	// mensagem personalizada para validação do tipo 'data'
			messages: {
				min: formatarMsgValidacaoComData("<spring:message code='msg.erro.data.deve.ser.posterior.ou.igual' />"),
				max: formatarMsgValidacaoComData("<spring:message code='msg.erro.data.deve.ser.anterior.ou.igual' />")
			}
		});
	});
	</script>
</head>
